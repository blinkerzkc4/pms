# Generated by Django 4.2.1 on 2023-10-05 00:35

from django.db import migrations, models

from project.models import District as DistrictModel
from project.models import FederalType as FederalTypeModel
from project.models import Municipality as MunicipalityModel
from project.models import Province as ProvinceModel
from utils.import_csv_data import get_addresses_from_csv, get_federal_types_from_csv
from utils.search import search_list_of_dicts


def populate_federal_models(apps, schema_editor):
    federal_addresses = get_addresses_from_csv()
    FederalType: FederalTypeModel = apps.get_model("project", "FederalType")
    Province: ProvinceModel = apps.get_model("project", "Province")
    District: DistrictModel = apps.get_model("project", "District")
    Municipality: MunicipalityModel = apps.get_model("project", "Municipality")
    db_alias = schema_editor.connection.alias

    federal_types = get_federal_types_from_csv()

    for province in federal_addresses["provinces"]:
        federal_type_data = search_list_of_dicts(
            federal_types, "id", province["federal_level_type_id"]
        )

        federal_type = (
            FederalType.objects.using(db_alias)
            .filter(code=federal_type_data["code"])
            .first()
        )

        province_data = {
            "name": province["name_np"],
            "name_unicode": province["name_np"],
            "name_eng": province["name_en"],
            "federal_type": federal_type,
        }
        Province.objects.using(db_alias).update_or_create(
            code=province["code"], defaults=province_data
        )
    for district_data in federal_addresses["districts"]:
        district_province = (
            Province.objects.using(db_alias)
            .filter(
                code=search_list_of_dicts(
                    federal_addresses["provinces"], "id", district_data["parent_id"]
                )["code"]
            )
            .first()
        )

        federal_type_data = search_list_of_dicts(
            federal_types, "id", district_data["federal_level_type_id"]
        )

        federal_type = (
            FederalType.objects.using(db_alias)
            .filter(code=federal_type_data["code"])
            .first()
        )

        district_code = district_data["code"]
        district_data = {
            "name": district_data["name_np"],
            "name_unicode": district_data["name_np"],
            "name_eng": district_data["name_en"],
            "federal_type": federal_type,
        }
        District.objects.using(db_alias).update_or_create(
            code=district_code,
            province=district_province,
            defaults=district_data,
        )

    for municipality in federal_addresses["municipalities"]:
        municipality_district = (
            District.objects.using(db_alias)
            .filter(
                code=search_list_of_dicts(
                    federal_addresses["districts"], "id", municipality["parent_id"]
                )["code"]
            )
            .first()
        )

        federal_type_data = search_list_of_dicts(
            federal_types, "id", municipality["federal_level_type_id"]
        )

        federal_type = (
            FederalType.objects.using(db_alias)
            .filter(code=federal_type_data["code"])
            .first()
        )

        municipality_data = {
            "name": municipality["name_np"],
            "name_unicode": municipality["name_np"],
            "name_eng": municipality["name_en"],
            "federal_type": federal_type,
        }
        Municipality.objects.using(db_alias).update_or_create(
            code=municipality["code"],
            district=municipality_district,
            defaults=municipality_data,
        )


class Migration(migrations.Migration):
    dependencies = [
        ("project", "0063_district_federal_type_municipality_federal_type_and_more"),
    ]

    operations = [
        migrations.RunPython(populate_federal_models),
    ]
